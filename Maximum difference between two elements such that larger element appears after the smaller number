def max_difference(arr):
    n = len(arr)
    
    # Edge case: If the array has less than 2 elements, return -1
    if n < 2:
        return -1
    
    # Initialize the minimum element seen so far and the maximum difference
    min_value = arr[0]
    max_diff = arr[1] - arr[0]  # Start with the difference between the first two elements
    
    # Traverse the array starting from the second element
    for i in range(1, n):
        # Update the maximum difference if the current element minus min_value is larger
        if arr[i] - min_value > max_diff:
            max_diff = arr[i] - min_value
        
        # Update the min_value to be the smallest element encountered so far
        if arr[i] < min_value:
            min_value = arr[i]
    
    # If max_diff is less than or equal to 0, return -1 (i.e., no valid pair found)
    if max_diff <= 0:
        return -1
    
    return max_diff

# Input processing
arr = list(map(int, input().split()))  # Read the list of integers

# Output the maximum difference
print(max_difference(arr))
