def compute_lps(s):
    n = len(s)
    lps = [0] * n  # LPS array
    length = 0  # Length of the previous longest prefix suffix
    i = 1

    while i < n:
        if s[i] == s[length]:
            length += 1
            lps[i] = length
            i += 1
        else:
            if length != 0:
                length = lps[length - 1]
            else:
                lps[i] = 0
                i += 1

    return lps[-1]  # Last value of LPS array gives the result

def longest_prefix_suffix(strings):
    results = []
    for s in strings:
        results.append(compute_lps(s))
    return results

# Input
T = int(input())  # Number of test cases
strings = [input().strip() for _ in range(T)]

# Output
results = longest_prefix_suffix(strings)
print("\n".join(map(str, results)))
